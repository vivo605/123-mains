import { relative } from "path"

export {}
/*
5. –¢–∞–º–∞–≥–æ—á–∏

- —Å–æ–∑–¥–∞—Ç—å 2 –∂–∏–≤–æ—Ç–Ω—ã—Ö (–∫–æ—Ç –∏ —Å–æ–±–∞–∫–∞), –ø—Ä–∏–¥—É–º–∞—Ç—å –∏–º –∫–ª–∏—á–∫–∏, –Ω–∞—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥–µ "–≥–æ–ª–æ—Å"
- —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∂–∏–≤–æ—Ç–Ω–æ–µ –∏ –¥–∞—ë—Ç –µ–º—É –∫–º–∞–Ω–¥—É "–≥–æ–ª–æ—Å"
(–ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ —ç–∫—Ä–∞–Ω–µ - –∫—Ç–æ –∏ —á—Ç–æ —Å–∫–∞–∑–∞–ª)

- —Å–æ–±–∞–∫–∞ —Ä–∞–¥–æ—Å—Ç–Ω–æ –ª–∞–µ—Ç –∏–ª–∏ –∑–ª–æ–±–Ω–æ —Ä—ã—á–∏—Ç
- –∫–æ—Ç –º—è—É—á–∏—Ç –∏–ª–∏ –±—Ä–æ—Å–∞–µ—Ç —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫—É—é —Ü–∏—Ç–∞—Ç–∫—É

–≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ –º–æ–∂–µ–º –¥–µ–ª–∞—Ç—å:
- –ø–æ–∫–æ—Ä–º–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞
- –∑–∞—Å—Ç–∞–≤–∏—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—É "–≥–æ–ª–æ—Å"

–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –Ω–∞–∫–æ—Ä–º–ª–µ–Ω –ª–∏ –ø–∏—Ç–æ–º–µ—Ü, –æ–Ω –∏–∑–¥–∞—ë—Ç —Ä–∞–∑–Ω—ã–µ –∑–≤—É–∫–∏.
–°–ø—É—Å—Ç—è —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ –∫–æ—Ä–º–ª–µ–Ω–∏—è –∂–∏–≤–æ—Ç–Ω–æ–µ —Å–Ω–æ–≤–æ –ø—Ä–æ–≥–æ–ª–æ–¥–∞–µ—Ç—Å—è.
(–æ—Ç –≥–æ–ª–æ–¥–∞ –Ω–∏–∫—Ç–æ –Ω–µ —É–º–∏—Ä–∞–µ—Ç!)

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ, —Å–æ–±–∞–∫–∞ —É–º–µ–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –º—è—á–∏–∫, –∞ –∫–æ—Ç —É–º–µ–µ—Ç –≥–∞–¥–∏—Ç—å –≤ —Ç–∞–ø–æ—á–µ–∫ :3
–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–º–µ—Å—Ç–æ –∫–æ–º–∞–Ω–¥—ã "–≥–æ–ª–æ—Å" –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –Ω–∞–∫–æ—Ä–º–ª–µ–Ω–Ω–æ—Å—Ç–∏.
*/

// Pet
// isSleeping

abstract class Pet {
  readonly name: string
  #isSleeping: boolean
  readonly abstract type: string

  protected _energy: number
  protected readonly abstract _additionalActions: string
  
  get availableActions() {
    return (
      '1. eat \n' +
      '2. voice \n' +
      '3. sleep \n' +
      '4. wake up \n' +
      this._additionalActions
      // '5. surprise | get ball \n'
    )
  }

  get isSleeping() {
    return this.#isSleeping
  }

  constructor(name: string) {
    this.name = name
    this.#isSleeping = false
    this._energy = 0
  }

  protected abstract _voice(): void
  
  sleep() {
    if (this.#isSleeping) {
      print(`${this.name} —É–∂–µ —Å–ø–∏—Ç`)
    }
    else {
      this.#isSleeping = true
      print(`${this.name} —É—Å–Ω—É–ª`)
    }
  }

  wakeUp() {
    if (this.#isSleeping) {
      this.#isSleeping = false
      print(`${this.name} –ø—Ä–æ—Å–Ω—É–ª—Å—è`)
    }
    else {
      print(`${this.name} –∏ —Ç–∞–∫ –Ω–µ —Å–ø–∏—Ç`)
    }
  }

  voice() {
    if (this.#isSleeping) {
      return print(`${this.name} —Å–ø–∏—Ç`)
    }

    this._voice()
  }

  eat() {
    this._energy = random(1, 3)
  }
}

class Cat extends Pet {
  readonly type: string
  constructor(name: string) {
    super(name)
    this.type = '–∫–æ—Ç'
  }

  protected _voice() {
    if (this._energy > 0){
      print('–ú—è—É :3')
      this._energy--
    } else {
      print('–¶–∏—Ç–∞—Ç—ã –≤–µ–ª–∏–∫–∏—Ö –∫–æ—Ç–æ–≤: "–ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —Ç–æ, —á—Ç–æ –º–æ–∂–Ω–æ —Å—ä–µ—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è..." üëÜ')
    }
  }

  getSurprise() {
    if (this._energy < 1){
      print('–Ø –Ω–∞–∫–∞–∫–∞–ª —Ç–µ–±–µ –≤ —Ç–∞–ø–∫–∏.–¢–µ–ø–µ—Ä—å –µ–¥—É –¥–∞–≤–∞–π :3') //:3
    }
    else{
      print('–ß—Ç–æ —Ç–æ —è –Ω–µ —Ç–æ —Å—å–µ–ª.–ó–∞–≥–ª—è–Ω–∏ –≤ —Ç–∞–ø–∫–∏)')
    }
  }

  protected get _additionalActions() {
    return '5. surprise'
  }
}

class Dog extends Pet {
  readonly type = '–ø—ë—Å'

  protected _voice(){
    if (this._energy > 0){
      print('–ì–∞—Ñ :3')
      this._energy--
    }
    else{
      print('–ñ—Ä–∞—Ç—å —Ö–æ—á—É >:(')
    }
  }

  protected get _additionalActions() {
    return '5. get ball'
  }

  getBall() {
    print('–ö–∏–Ω—å –º—è—á–∏–∫ –µ—â—ë —Ä–∞–∑')
    this._energy--
  }
}

// class Dog {} // !

// 1. eat2. voice3. sleep4. wakeUp5. surprise

// input('–ö–∞–∫ –∑–æ–≤—É—Ç –∫–æ—Ç–∞ –∏–ª–∏ –≥–∏–±—Ä–∏–¥–∞): ')
const cat = new Cat('–ú–∞—Ç—Ä–æ—Å–∫–∏–Ω')
const dog = new Dog('–®–∞—Ä–∏–∫')

const pet: Pet = random(0, 1) ? cat : dog

print(`–≠—Ç–æ ${pet.type}, –µ–≥–æ –∑–æ–≤—É—Ç ${pet.name}`)

while (true) {
  print(pet.availableActions)
  const input_actions = input('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ').toLowerCase()
  /*
  1. eat
  2. voice
  3. sleep
  4. wakeUp
  5. surprise
  */

  switch (input_actions) {
    case "eat":
      pet.eat();
      break;

    case "voice":
      pet.voice();
      break;

    case "sleep":
      pet.sleep();
      break;

    case "wake up":
      pet.wakeUp();
      break;

    case "surprise":
      if (pet instanceof Cat) {
        pet.getSurprise();
      } else {
        console.log("–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–æ—Ç–∞! –ò–ª–∏ —É —Ç–µ–±—è –≥–µ–±—Ä–∏–¥?...");
      }
      break;

    case "get ball":
      if (pet instanceof Dog) {
        pet.getBall();
      } else {
        console.log("–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–±–∞–∫–∏! –ò–ª–∏ —É —Ç–µ–±—è –≥–µ–±—Ä–∏–¥?...");
      }
      break;

    default:
      console.log("–í—ã–±–µ—Ä–∏ —Ä–µ–∞–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ");
      break;
  }

}


// // –ø—Ä–∏–º–µ—Ä—ã
// print(`–ö–æ—Ç–∞ –∑–æ–≤—É—Ç: ${cat.name}`)
// cat.sleep() // –í–∞—Å—å–∫–∞ —É—Å–Ω—É–ª / –í–∞—Å—å–∫–∞ —É–∂–µ —Å–ø–∏—Ç 
// cat.wakeUp() // –í–∞—Å—å–∫–∞ –ø—Ä–æ—Å–Ω—É–ª—Å—è / –í–∞—Å—å–∫–∞ –∏ —Ç–∞–∫ –Ω–µ —Å–ø–∏—Ç
// cat.voice() // –ú—è—É :3 / –ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —Ç–æ, —á—Ç–æ –º–æ–∂–Ω–æ —Å—ä–µ—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è...
// cat.isSleeping
// cat.eat() // energy [1..3]
// // cat.#energy

/*
–î–æ–º–∞—à–∫–∞:
7.3 - –¥–æ–ø–∏—Å–∞—Ç—å –≤—Å–µ CorrectNumber
7.4 - –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–ª–∞—Å—Å–æ–≤
7.5 - –¥–æ–¥–µ–ª–∞—Ç—å —Ü–∏–∫–ª —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏–π
*/
